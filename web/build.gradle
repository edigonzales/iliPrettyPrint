plugins {
	id 'java'
	id 'war'
    id 'maven-publish'
    id 'signing'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'io.github.sogis'

def myArtifactId = "iliprettyprint-web-service"

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
    implementation project(':app')
}

tasks.named('test') {
	useJUnitPlatform()
}

project.archivesBaseName = myArtifactId

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.web
            artifact jar
            artifact sourcesJar
            artifact javadocJar

            groupId = "io.github.sogis"
            artifactId = myArtifactId
            
            pom {
                name = "iliprettyprint"
                url = "https://github.com/edigonzales/iliPrettyPrint"
                description = "INTERLIS pretty printer"
                scm {
                    connection = "scm:git:https@github.com/edigonzales/iliPrettyPrint"
                    developerConnection = "scm:git:https@github.com/edigonzales/iliPrettyPrint"
                    url = "https://github.com/edigonzales/iliPrettyPrint"
                }
                licenses {
                    license {
                        name = "MIT"
                        url = "https://github.com/edigonzales/iliPrettyPrint/blob/master/LICENSE"
                    }
                }
                developers {
                    developer {
                        id = "edigonzales"
                        name = "Stefan Ziegler"
                    }
                }
            }
        }
    }
}

//if (System.getProperty('release') != null) {
if (true) {
    signing {
        sign publishing.publications.mavenJava
    }
}
