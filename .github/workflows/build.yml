name: build and release

on: 
  push:
    paths-ignore:
      - '**.md'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'
          
      - name: Build application with Gradle
        #if: ${{ success() && github.ref != 'refs/heads/main'}}
        id: build
        run: ./gradlew clean app:build app:sourcesJar app:javadocJar web:build web:sourcesJar web:javadocJar

      - name: Debug 1
        run: |
          ls -la app/build/libs
          ls -la web/build/libs

      - uses: actions/upload-artifact@v4
        if: always() && (steps.build.outcome == 'failure')
        with:
          name: reports
          path: 
            - app/build/reports/tests/
            - web/build/reports/tests/

      - name: Decode
        if: always() && (steps.build.outcome == 'success')
        run: |
          echo "${{secrets.SIGNING_SECRET_KEY_RING_FILE}}" > ~/.gradle/sonatype_upload.gpg.b64
          base64 -d ~/.gradle/sonatype_upload.gpg.b64 > ~/.gradle/sonatype_upload.gpg

      - name: Publish application jar file
        if: ${{ success() && (github.ref == 'refs/heads/main')}}
        run: ./gradlew -i app:publishToSonatype closeAndReleaseSonatypeStagingRepository -Psigning.keyId=${{secrets.SIGNING_KEY_ID}} -Psigning.password=${{secrets.SIGNING_PASSWORD}} -Psigning.secretKeyRingFile=$(echo ~/.gradle/sonatype_upload.gpg)
        env:
          OSSRH_USERNAME: ${{secrets.OSSRH_USERNAME}}
          OSSRH_PASSWORD: ${{secrets.OSSRH_PASSWORD}} 

      - name: Release application
        if: ${{ success() && github.ref == 'refs/heads/main'}}
        run: |
          ./gradlew -s app:jreleaserRelease
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
